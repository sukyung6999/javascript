7장_연산자


  [산술 연산자]

    - 이항 산술 연산자 : 2개의 피연산자가 필요함
     ( + - * / % )

    - 단항 산술 연산자 : 1개의 피연산자가 필요함
      ++ : 피연산자를 바꿈
      -- : 피연사자를 바꿈
      + : 피연산자를 바꾸지 않음
      - : 피연산자를 바꾸지 않음

      예제) var x = false; 
        console.log(-x); // 0
        console.log(x); // false

    - 문자열 결합 연산자 : 피연산자 중 하나 이상이 문자일 경우 문자로 반환
      ( + ) 
      ㄴ 암묵적 타입 변환이 이뤄짐


  [할당 연산자]
  ( = )
    :우항에 있는 피연산자가 연산이 되어 좌항에 있는 변수에 할당됨
  
      ㄴ 할당문은 표현식이기에 우항에 할당문이 들어갈 수 가 있으므로, 연쇄할당이 가능하다

  [비교 연산자]
  ( == === )
    : 좌항과 우항을 비교한뒤 불리언 값을 반환함

    - 동등 비교 연산자 : 좌항과 우항의 값이 같음 ("암묵적 타입 변환"을 한 후에 비교를 함)
    ( == )

    - 일치 비교 연산자 : 좌항과 우항의 값이 같음 + 좌항과 우항의 타입도 같음
    ( === )

    ** NaN은 자신과 일치하지 않는 유일한 값이다
      단, 숫자가 NaN인지 확인하려면 빌트인 함수 Number.isNan(값)으로 불리언 값으로 반환해줌

    ** object.is(피연산자, 피연산자) 로 보다 정확한 비교 연산이 가능함!! 
      예)
      동등 비교 연산자(==)와 일치 비교 연산자(===)는 -0과 +0 그리고 NaN 과 NaN을 같다고 알려주지만, 
      object.is(-0, +0)로 검사하면 false,
      object.is(NaN, NaN)로 검사하면 true로 알려줌

[대소 관계 연산자]

      