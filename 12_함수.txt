12장_함수

1. 함수란
매개변수(parameter), 인수(argument), 반환값(return value)

function sample (x, y) { // 식별자, 매개변수
  return x + y; // 반환값
}
sample(2,5);// 인수

함수는 함수 정의를 통해 생성

  함수 정의하는 방법
  1) 함수 선언문
  function sample (x, y) { 
    return x + y; 
  }

  뒤에 4. 함수 정의에 방법이 더 나옴

------------------------------------------------------------

2. 함수를 사용하는 이유는 코드의 재사용이 가능하기 때문에 유지 보수의 편의성을 높이고, 코드의 신뢰성을 높임

1) 여러번 호출 가능
2) 실행 시점을 개발자가 정할 수 있음

------------------------------------------------------------

3. 함수 리터럴

함수는 객체 타입의 값임!!!!!!!!!
객체와 다른 점은, 함수만 호출할 수 있다는 것 그리고 함수만의 고유 프로퍼티가 있음

(리터럴은 값을 생성하기 위한 표기법)

------------------------------------------------------------

4. 함수 정의

1) 함수 선언문
=> 함수 리터럴과 동일하나, 함수선언문은 식별자 이름을 생략할 수 없다

2) 함수 표현 식 
var add = functio (x, y) {
  return x + y;
}

3) Function 생성자 함수
var add = new Function ('x', 'y', 'return x + y');

4) 화살표 함수 
var add = (x,y) => {
  return x + y;
}

