8장_제어문

제어문은 코드 실행 순서를 변경시키기 때문에 가독성이 떨어질 수 있음

  블록문(코드블록)은?
  - 0개 이상의 문을 중괄호로 묶은것
  - 블록문은 문의 종결성을 의미하는 자체 종결성을 가지고 있어서 
    중괄호 뒤에 세미콜론은 안붙임

1. 조건문
 
  1-1. if...else문
  : 조건식이 불리언 값으로 평가되어야 함

  1-2. switch문
  : 조건식이 문자열이나 숫자 값인 경우

  switch (표현식) {
    case (표현식1) : 
    실행문;
    break;

    ...
    default: // 생략 가능
    실행문;
  }
    * case에 해당되는 문이 나올때 탈출하려면
      break문을 사용해야함
      break문을 사용하지 않는다면 끝까지 다 읽음 (폴 스루)
    * break문을 생략한 폴스루를 활용하기도 함
      예제 )

      switch (month) {
        case 1 : case 3 : case 5 : case 7 : case 8 : case 10 : case 12:
          days = 31;
          break;
        
        case 4 : case 6 : case 8 : case 9 : case 11:
          days = 30;
          break;

      }

------------------------------------------------------------

2. 반복문
: 조건식이 false일때까지 실행문을 반복함

  2-1. for문 : 반복 횟수가 명확할 때

  2-2. while문 : 반복 횟수가 불명확할 때 + 조건이 참이면 실행

  2-3. do...while문 : 선 실행 + 후 조건 평가

------------------------------------------------------------

3. break문
: 레이블 문, 반복문, switch문(코드 블록)을 탈출한다.
이외의 코드 블록에서 break 사용 시 문법 에러가 남

* 레이블 문 : 식별자가 붙은 문, 프로그램의 실행 순서를 제어 
  예) switch문의 case문과 default문

=> 레이블문을 탈출하려면 break문에 식별자를 지정 / 그러나 프로그램의 흐름이 복잡해져 가독성이 나빠지므로 권장하지 않음 

4. continue문 
: 반복문을 탈출하지는 않지만 , 반복문의 처음(증감식)으로 돌아가게 함 

------------------------------------------------------------

[기타]
const string = 'hello world';
const search = 'l';

string.indexOf(search); // 2

-----------------------------------

const regExp = new regExp(search, 'g');
string.match(regExp).length; //3